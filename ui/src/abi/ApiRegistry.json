{
    "abi": [
      {
        "type": "constructor",
        "inputs": [
          {
            "name": "_kimap",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "_kinoAccountImpl",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "_resellerImpl",
            "type": "address",
            "internalType": "address"
          }
        ],
        "stateMutability": "nonpayable"
      },
      {
        "type": "receive",
        "stateMutability": "payable"
      },
      {
        "type": "function",
        "name": "KIMAP",
        "inputs": [],
        "outputs": [
          {
            "name": "",
            "type": "address",
            "internalType": "contract IKimap"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "KINO_ACCOUNT_IMPL",
        "inputs": [],
        "outputs": [
          {
            "name": "",
            "type": "address",
            "internalType": "address"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "RESSELLER_IMPL",
        "inputs": [],
        "outputs": [
          {
            "name": "",
            "type": "address",
            "internalType": "address"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "UPGRADE_INTERFACE_VERSION",
        "inputs": [],
        "outputs": [
          {
            "name": "",
            "type": "string",
            "internalType": "string"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "entryPoint",
        "inputs": [],
        "outputs": [
          {
            "name": "",
            "type": "address",
            "internalType": "contract IEntryPoint"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "execute",
        "inputs": [
          {
            "name": "to",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "value",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "data",
            "type": "bytes",
            "internalType": "bytes"
          },
          {
            "name": "operation",
            "type": "uint8",
            "internalType": "uint8"
          }
        ],
        "outputs": [
          {
            "name": "returnData",
            "type": "bytes",
            "internalType": "bytes"
          }
        ],
        "stateMutability": "payable"
      },
      {
        "type": "function",
        "name": "execute",
        "inputs": [
          {
            "name": "to",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "value",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "data",
            "type": "bytes",
            "internalType": "bytes"
          },
          {
            "name": "operation",
            "type": "uint8",
            "internalType": "uint8"
          },
          {
            "name": "txGas",
            "type": "uint256",
            "internalType": "uint256"
          }
        ],
        "outputs": [
          {
            "name": "returnData",
            "type": "bytes",
            "internalType": "bytes"
          }
        ],
        "stateMutability": "payable"
      },
      {
        "type": "function",
        "name": "getMessage",
        "inputs": [
          {
            "name": "to",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "name",
            "type": "bytes",
            "internalType": "bytes"
          },
          {
            "name": "initialization",
            "type": "bytes",
            "internalType": "bytes"
          },
          {
            "name": "implementation",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "signer",
            "type": "address",
            "internalType": "address"
          }
        ],
        "outputs": [
          {
            "name": "",
            "type": "bytes32",
            "internalType": "bytes32"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "getNonce",
        "inputs": [],
        "outputs": [
          {
            "name": "",
            "type": "uint256",
            "internalType": "uint256"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "getResellerList",
        "inputs": [],
        "outputs": [
          {
            "name": "",
            "type": "string[]",
            "internalType": "string[]"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "getResellers",
        "inputs": [
          {
            "name": "resellersToGet",
            "type": "string[]",
            "internalType": "string[]"
          }
        ],
        "outputs": [
          {
            "name": "",
            "type": "tuple[]",
            "internalType": "struct ApiRegistry.ResellerData[]",
            "components": [
              {
                "name": "tba",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "node_name",
                "type": "string",
                "internalType": "string"
              }
            ]
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "initialize",
        "inputs": [],
        "outputs": [],
        "stateMutability": "nonpayable"
      },
      {
        "type": "function",
        "name": "isOperator",
        "inputs": [
          {
            "name": "signer",
            "type": "address",
            "internalType": "address"
          }
        ],
        "outputs": [
          {
            "name": "",
            "type": "bool",
            "internalType": "bool"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "isValidSignature",
        "inputs": [
          {
            "name": "hash",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          {
            "name": "signature",
            "type": "bytes",
            "internalType": "bytes"
          }
        ],
        "outputs": [
          {
            "name": "magicValue",
            "type": "bytes4",
            "internalType": "bytes4"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "isValidSigner",
        "inputs": [
          {
            "name": "signer",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "",
            "type": "bytes",
            "internalType": "bytes"
          }
        ],
        "outputs": [
          {
            "name": "magicValue",
            "type": "bytes4",
            "internalType": "bytes4"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "kimap",
        "inputs": [],
        "outputs": [
          {
            "name": "",
            "type": "address",
            "internalType": "contract IKimap"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "mint",
        "inputs": [
          {
            "name": "to",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "name",
            "type": "bytes",
            "internalType": "bytes"
          },
          {
            "name": "initialization",
            "type": "bytes",
            "internalType": "bytes"
          },
          {
            "name": "implementation",
            "type": "address",
            "internalType": "address"
          }
        ],
        "outputs": [
          {
            "name": "tba",
            "type": "address",
            "internalType": "address"
          }
        ],
        "stateMutability": "payable"
      },
      {
        "type": "function",
        "name": "mintBySignature",
        "inputs": [
          {
            "name": "to",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "name",
            "type": "bytes",
            "internalType": "bytes"
          },
          {
            "name": "initialization",
            "type": "bytes",
            "internalType": "bytes"
          },
          {
            "name": "implementation",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "signature",
            "type": "tuple",
            "internalType": "struct IKinoAccountMinter.Signature",
            "components": [
              {
                "name": "v",
                "type": "uint8",
                "internalType": "uint8"
              },
              {
                "name": "r",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "s",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "signer",
                "type": "address",
                "internalType": "address"
              }
            ]
          }
        ],
        "outputs": [
          {
            "name": "tba",
            "type": "address",
            "internalType": "address"
          }
        ],
        "stateMutability": "nonpayable"
      },
      {
        "type": "function",
        "name": "onERC1155BatchReceived",
        "inputs": [
          {
            "name": "",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "",
            "type": "uint256[]",
            "internalType": "uint256[]"
          },
          {
            "name": "",
            "type": "uint256[]",
            "internalType": "uint256[]"
          },
          {
            "name": "",
            "type": "bytes",
            "internalType": "bytes"
          }
        ],
        "outputs": [
          {
            "name": "",
            "type": "bytes4",
            "internalType": "bytes4"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "onERC1155Received",
        "inputs": [
          {
            "name": "",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "",
            "type": "bytes",
            "internalType": "bytes"
          }
        ],
        "outputs": [
          {
            "name": "",
            "type": "bytes4",
            "internalType": "bytes4"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "onERC721Received",
        "inputs": [
          {
            "name": "",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "receivedTokenId",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "",
            "type": "bytes",
            "internalType": "bytes"
          }
        ],
        "outputs": [
          {
            "name": "",
            "type": "bytes4",
            "internalType": "bytes4"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "proxiableUUID",
        "inputs": [],
        "outputs": [
          {
            "name": "",
            "type": "bytes32",
            "internalType": "bytes32"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "registerAsReseller",
        "inputs": [
          {
            "name": "reseller_name",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "full_node_name",
            "type": "string",
            "internalType": "string"
          }
        ],
        "outputs": [
          {
            "name": "",
            "type": "address",
            "internalType": "address"
          }
        ],
        "stateMutability": "payable"
      },
      {
        "type": "function",
        "name": "resellerList",
        "inputs": [
          {
            "name": "",
            "type": "uint256",
            "internalType": "uint256"
          }
        ],
        "outputs": [
          {
            "name": "",
            "type": "string",
            "internalType": "string"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "resellers",
        "inputs": [
          {
            "name": "",
            "type": "string",
            "internalType": "string"
          }
        ],
        "outputs": [
          {
            "name": "tba",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "node_name",
            "type": "string",
            "internalType": "string"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "state",
        "inputs": [],
        "outputs": [
          {
            "name": "",
            "type": "uint256",
            "internalType": "uint256"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "supportsInterface",
        "inputs": [
          {
            "name": "interfaceId",
            "type": "bytes4",
            "internalType": "bytes4"
          }
        ],
        "outputs": [
          {
            "name": "",
            "type": "bool",
            "internalType": "bool"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "token",
        "inputs": [],
        "outputs": [
          {
            "name": "chainId",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "tokenContract",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "tokenId",
            "type": "uint256",
            "internalType": "uint256"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "tokensReceived",
        "inputs": [
          {
            "name": "",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "",
            "type": "bytes",
            "internalType": "bytes"
          },
          {
            "name": "",
            "type": "bytes",
            "internalType": "bytes"
          }
        ],
        "outputs": [],
        "stateMutability": "pure"
      },
      {
        "type": "function",
        "name": "upgradeToAndCall",
        "inputs": [
          {
            "name": "newImplementation",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "data",
            "type": "bytes",
            "internalType": "bytes"
          }
        ],
        "outputs": [],
        "stateMutability": "payable"
      },
      {
        "type": "function",
        "name": "validateUserOp",
        "inputs": [
          {
            "name": "userOp",
            "type": "tuple",
            "internalType": "struct PackedUserOperation",
            "components": [
              {
                "name": "sender",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "nonce",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "initCode",
                "type": "bytes",
                "internalType": "bytes"
              },
              {
                "name": "callData",
                "type": "bytes",
                "internalType": "bytes"
              },
              {
                "name": "accountGasLimits",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "preVerificationGas",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "gasFees",
                "type": "bytes32",
                "internalType": "bytes32"
              },
              {
                "name": "paymasterAndData",
                "type": "bytes",
                "internalType": "bytes"
              },
              {
                "name": "signature",
                "type": "bytes",
                "internalType": "bytes"
              }
            ]
          },
          {
            "name": "userOpHash",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          {
            "name": "missingAccountFunds",
            "type": "uint256",
            "internalType": "uint256"
          }
        ],
        "outputs": [
          {
            "name": "validationData",
            "type": "uint256",
            "internalType": "uint256"
          }
        ],
        "stateMutability": "nonpayable"
      },
      {
        "type": "event",
        "name": "Initialized",
        "inputs": [
          {
            "name": "version",
            "type": "uint64",
            "indexed": false,
            "internalType": "uint64"
          }
        ],
        "anonymous": false
      },
      {
        "type": "event",
        "name": "Upgraded",
        "inputs": [
          {
            "name": "implementation",
            "type": "address",
            "indexed": true,
            "internalType": "address"
          }
        ],
        "anonymous": false
      },
      {
        "type": "error",
        "name": "AddressEmptyCode",
        "inputs": [
          {
            "name": "target",
            "type": "address",
            "internalType": "address"
          }
        ]
      },
      {
        "type": "error",
        "name": "ECDSAInvalidSignature",
        "inputs": []
      },
      {
        "type": "error",
        "name": "ECDSAInvalidSignatureLength",
        "inputs": [
          {
            "name": "length",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      },
      {
        "type": "error",
        "name": "ECDSAInvalidSignatureS",
        "inputs": [
          {
            "name": "s",
            "type": "bytes32",
            "internalType": "bytes32"
          }
        ]
      },
      {
        "type": "error",
        "name": "ERC1967InvalidImplementation",
        "inputs": [
          {
            "name": "implementation",
            "type": "address",
            "internalType": "address"
          }
        ]
      },
      {
        "type": "error",
        "name": "ERC1967NonPayable",
        "inputs": []
      },
      {
        "type": "error",
        "name": "FailedCall",
        "inputs": []
      },
      {
        "type": "error",
        "name": "InvalidInitialization",
        "inputs": []
      },
      {
        "type": "error",
        "name": "InvalidKimapAddress",
        "inputs": []
      },
      {
        "type": "error",
        "name": "InvalidKinoAccountImpl",
        "inputs": []
      },
      {
        "type": "error",
        "name": "InvalidResellerImpl",
        "inputs": []
      },
      {
        "type": "error",
        "name": "InvalidSignature",
        "inputs": [
          {
            "name": "actual",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "expected",
            "type": "address",
            "internalType": "address"
          }
        ]
      },
      {
        "type": "error",
        "name": "NotInitializing",
        "inputs": []
      },
      {
        "type": "error",
        "name": "NotOperatorOrEntryPoint",
        "inputs": []
      },
      {
        "type": "error",
        "name": "OwnershipCycle",
        "inputs": []
      },
      {
        "type": "error",
        "name": "UUPSUnauthorizedCallContext",
        "inputs": []
      },
      {
        "type": "error",
        "name": "UUPSUnsupportedProxiableUUID",
        "inputs": [
          {
            "name": "slot",
            "type": "bytes32",
            "internalType": "bytes32"
          }
        ]
      }
    ],
    "methodIdentifiers": {
      "KIMAP()": "b1af3baf",
      "KINO_ACCOUNT_IMPL()": "f330dc7b",
      "RESSELLER_IMPL()": "924fb8f3",
      "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
      "entryPoint()": "b0d691fe",
      "execute(address,uint256,bytes,uint8)": "51945447",
      "execute(address,uint256,bytes,uint8,uint256)": "ca3b98bb",
      "getMessage(address,bytes,bytes,address,address)": "5b64a054",
      "getNonce()": "d087d288",
      "getResellerList()": "8463cdeb",
      "getResellers(string[])": "98769c22",
      "initialize()": "8129fc1c",
      "isOperator(address)": "6d70f7ae",
      "isValidSignature(bytes32,bytes)": "1626ba7e",
      "isValidSigner(address,bytes)": "523e3260",
      "kimap()": "7f587930",
      "mint(address,bytes,bytes,address)": "094cefed",
      "mintBySignature(address,bytes,bytes,address,(uint8,bytes32,bytes32,address))": "144fb5a8",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
      "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
      "onERC721Received(address,address,uint256,bytes)": "150b7a02",
      "proxiableUUID()": "52d1902d",
      "registerAsReseller(string,string)": "1b038e19",
      "resellerList(uint256)": "9ae453a6",
      "resellers(string)": "54a860a2",
      "state()": "c19d93fb",
      "supportsInterface(bytes4)": "01ffc9a7",
      "token()": "fc0c546a",
      "tokensReceived(address,address,address,uint256,bytes,bytes)": "0023de29",
      "upgradeToAndCall(address,bytes)": "4f1ef286",
      "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": "19822f7c"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_kimap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_kinoAccountImpl\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_resellerImpl\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidKimapAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidKinoAccountImpl\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidResellerImpl\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"actual\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expected\",\"type\":\"address\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOperatorOrEntryPoint\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipCycle\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"KIMAP\",\"outputs\":[{\"internalType\":\"contract IKimap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"KINO_ACCOUNT_IMPL\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESSELLER_IMPL\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"txGas\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"initialization\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"getMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getResellerList\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"resellersToGet\",\"type\":\"string[]\"}],\"name\":\"getResellers\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tba\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"node_name\",\"type\":\"string\"}],\"internalType\":\"struct ApiRegistry.ResellerData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"isValidSigner\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kimap\",\"outputs\":[{\"internalType\":\"contract IKimap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"initialization\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tba\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"initialization\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"internalType\":\"struct IKinoAccountMinter.Signature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"name\":\"mintBySignature\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tba\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"receivedTokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reseller_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"full_node_name\",\"type\":\"string\"}],\"name\":\"registerAsReseller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"resellerList\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"resellers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tba\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"node_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"execute(address,uint256,bytes,uint8)\":{\"details\":\"Allows the mech operator to execute arbitrary transactions\",\"params\":{\"data\":\"Data payload of transaction.\",\"operation\":\"Operation type of transaction.\",\"to\":\"Destination address of transaction.\",\"value\":\"Ether value of transaction.\"},\"returns\":{\"returnData\":\"Return data of the call\"}},\"execute(address,uint256,bytes,uint8,uint256)\":{\"details\":\"Allows the mech operator to execute arbitrary transactions\",\"params\":{\"data\":\"Data payload of transaction.\",\"operation\":\"Operation type of transaction.\",\"to\":\"Destination address of transaction.\",\"txGas\":\"Gas to send for executing the meta transaction, if 0 all left will be sent\",\"value\":\"Ether value of transaction.\"},\"returns\":{\"returnData\":\"Return data of the call\"}},\"isOperator(address)\":{\"details\":\"Return if the passed address is authorized to sign on behalf of the mech, must be implemented by the child contract\",\"params\":{\"signer\":\"The address to check\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"Checks whether the signature provided is valid for the provided hash, complies with EIP-1271. A signature is valid if either:  - It's a valid ECDSA signature by the mech operator  - It's a valid EIP-1271 signature by the mech operator  - It's a valid EIP-1271 signature by the mech itself\",\"params\":{\"hash\":\"Hash of the data (could be either a message hash or transaction hash)\",\"signature\":\"Signature to validate. Can be an ECDSA signature or a EIP-1271 contract signature (identified by v=0)\"}},\"isValidSigner(address,bytes)\":{\"details\":\"Returns a magic value indicating whether a given signer is authorized to act on behalf of the account\",\"params\":{\"signer\":\"The address to check signing authorization for\"},\"returns\":{\"magicValue\":\"Magic value indicating whether the signer is valid\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"state()\":{\"details\":\"Returns the current account nonce\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if a given interfaceId is supported by this account. This method can be extended by an override\"},\"token()\":{\"details\":\"Returns the identifier of the non-fungible token which owns the account. The return value of this function MUST be constant - it MUST NOT change over time.\",\"returns\":{\"chainId\":\"      The EIP-155 ID of the chain the token exists on\",\"tokenContract\":\"The contract address of the token\",\"tokenId\":\"      The ID of the token\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"authorizer\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \\\"indefinite\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"entryPoint()\":{\"notice\":\"Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account.\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/account/ApiRegistry.sol\":\"ApiRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts-5.1.0/=dependencies/@openzeppelin-contracts-5.1.0/\",\":@openzeppelin-contracts-upgradeable-5.1.0/=dependencies/@openzeppelin-contracts-upgradeable-5.1.0/\",\":@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.1.0/\",\":@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.1.0/\",\":ds-test/=dependencies/erc6551-reference-0.3.1/lib/forge-std/lib/ds-test/src/\",\":erc6551-reference-0.3.1/=dependencies/erc6551-reference-0.3.1/\",\":eth-infinitism-account-abstraction-0.7/=dependencies/eth-infinitism-account-abstraction-0.7/\",\":forge-std-1.9.4/=dependencies/forge-std-1.9.4/\",\":forge-std/=dependencies/forge-std/src/\",\":safe-global-safe-smart-account-1.4.1-3/=dependencies/safe-global-safe-smart-account-1.4.1-3/\"]},\"sources\":{\"dependencies/@openzeppelin-contracts-5.1.0/interfaces/IERC1271.sol\":{\"keccak256\":\"0x4aaaf1c0737dd16e81f0d2b9833c549747a5ede6873bf1444bc72aa572d03e98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eada27d7668eebaea16c3b890aa1b38ffc53965292e26c96f7c44834623f4710\",\"dweb:/ipfs/QmVSWuLtxyCqNbLyY89ptxkvsk4CLLKDQYigEne5Qj8k1L\"]},\"dependencies/@openzeppelin-contracts-5.1.0/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"dependencies/@openzeppelin-contracts-5.1.0/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"dependencies/@openzeppelin-contracts-5.1.0/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"dependencies/@openzeppelin-contracts-5.1.0/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"dependencies/@openzeppelin-contracts-5.1.0/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"dependencies/@openzeppelin-contracts-5.1.0/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"dependencies/@openzeppelin-contracts-5.1.0/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"dependencies/@openzeppelin-contracts-5.1.0/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"dependencies/@openzeppelin-contracts-5.1.0/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"dependencies/@openzeppelin-contracts-5.1.0/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"dependencies/@openzeppelin-contracts-5.1.0/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"dependencies/@openzeppelin-contracts-5.1.0/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"dependencies/@openzeppelin-contracts-5.1.0/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"dependencies/@openzeppelin-contracts-5.1.0/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"dependencies/@openzeppelin-contracts-5.1.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"dependencies/@openzeppelin-contracts-5.1.0/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"dependencies/@openzeppelin-contracts-5.1.0/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"dependencies/@openzeppelin-contracts-5.1.0/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.1.0/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"dependencies/@openzeppelin-contracts-upgradeable-5.1.0/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"dependencies/erc6551-reference-0.3.1/src/interfaces/IERC6551Account.sol\":{\"keccak256\":\"0xda097894cc052f451ad669c5a07a9eda3f53a948f8080714850dc68cc1040b42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ca48dd1eff4f9eee3699a6800c09c4d208d103862f2a55d66286e8eb4b7771e\",\"dweb:/ipfs/QmX2KX2fmUV5rbVoJSAq6BTVVwxK1Jy169dRJN2h8UCNLz\"]},\"dependencies/erc6551-reference-0.3.1/src/interfaces/IERC6551Executable.sol\":{\"keccak256\":\"0x9bdb7a7e324bf36203ec6ff68c454446cae3993c1054b0356a081fa52ec43a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9c6187c6633ec42ccb0ae5fdf4f1791fad7a505f29c8b55b1a5fe3ec9ee0148\",\"dweb:/ipfs/QmeANTvdkBMZeumsw6Qe7MHEjgkHJTLju4oQtAfo9HLzNV\"]},\"dependencies/erc6551-reference-0.3.1/src/lib/ERC6551AccountLib.sol\":{\"keccak256\":\"0x49e81d01b3aef13b314a6667e4811089a78ad03dfad5cd430b00be2f9ed8ea34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46b60a9d293324e56f59937e2a4d3a79ef4f69847868b5bbc3d81bcd6d1981a7\",\"dweb:/ipfs/QmTgv7s9kf8UxdXuR1TswCQLguKueVwbABahPLnfJRUXfB\"]},\"dependencies/erc6551-reference-0.3.1/src/lib/ERC6551BytecodeLib.sol\":{\"keccak256\":\"0xc6a20fb273cbe33fa8d9591aaeb6a9f24b8fd9944f8d0017f4bf5b26614731f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740fed446bda3effacea6fa48d23a7d23911363e353bd12c5171b2b21b996acf\",\"dweb:/ipfs/QmNbWP8UkANAUGCc4ZcjfyKDBi89KjSunFQEvnhpXLBFt4\"]},\"dependencies/eth-infinitism-account-abstraction-0.7/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x2736272f077d1699b8b8bf8be18d1c20e506668fc52b3293da70d17e63794358\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://35744475cf48405d7fd6edf6a96c84ef9da3ce844d8dfe3e2e1ffc30edf21d07\",\"dweb:/ipfs/QmUdau9VjVQ7iuRbdTmFSrXP7Hcasd9Cc57LP9thK78bwj\"]},\"dependencies/eth-infinitism-account-abstraction-0.7/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"dependencies/eth-infinitism-account-abstraction-0.7/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"dependencies/eth-infinitism-account-abstraction-0.7/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"dependencies/eth-infinitism-account-abstraction-0.7/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"dependencies/eth-infinitism-account-abstraction-0.7/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"dependencies/eth-infinitism-account-abstraction-0.7/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"dependencies/eth-infinitism-account-abstraction-0.7/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"dependencies/eth-infinitism-account-abstraction-0.7/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"dependencies/safe-global-safe-smart-account-1.4.1-3/contracts/interfaces/ERC1155TokenReceiver.sol\":{\"keccak256\":\"0x87e62665c041cade64e753ecdccf931cb100ab6e4bcc98769c1e6474be9db493\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://59ca1157dcfe19c72b9d1244a6ae5ec70fee9793d4d8af523b70f22ae567d55c\",\"dweb:/ipfs/QmfE3kv73QuQWAWQND927LWVHVLCp19m1mLUvxVYJDEFZM\"]},\"dependencies/safe-global-safe-smart-account-1.4.1-3/contracts/interfaces/ERC721TokenReceiver.sol\":{\"keccak256\":\"0x96c4c5457fede2d4c6012011dfda36f8e8ffdb7388468f2dddb35661538bf479\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://99a54737bc23722f79ec9cf9de63ba35b556a61df453eb332f3cac783503f26c\",\"dweb:/ipfs/QmbLW5C2RhoLbwDWEPtTKpyYE5apT9B3q4U11PZG3wSM1n\"]},\"dependencies/safe-global-safe-smart-account-1.4.1-3/contracts/interfaces/ERC777TokensRecipient.sol\":{\"keccak256\":\"0x32ca7f1610659f35e52f5a989e1d844b7847ad57fab06e0cae5bc027248536ac\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://9082896ec697e320087b1a682b69a5cdf71b33a2f7a956e2fb6054f9f9d56d06\",\"dweb:/ipfs/QmUu7iNkQNvvqBPbbxuhqiQpYPYYnfsyPEsf4AMQFANXFZ\"]},\"src/account/ApiRegistry.sol\":{\"keccak256\":\"0xc9457a36fe768ae1bea47269c29156834e10c5d5b5c1465f53b9977e1ba95662\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://42279ef1e3874147f4f70c5aa6f8f9c848e0a9aff2c907bb579f236b8f110335\",\"dweb:/ipfs/QmNkE7HZBww6kwiJtYdXV1LkYSkUour8WAbxCWrCG3zUvE\"]},\"src/account/KinoAccountMinter.sol\":{\"keccak256\":\"0x58871151f767d2ec45a9d8af34531def0920290dc219274ca56c275d787a819d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8d841b89c32238b1d0810f846c2746abe3577578f6e07869042df5a717f2022a\",\"dweb:/ipfs/QmatbPAvLf298xmHA5kCTQmdYP8up4ZazhwdPSQ1jTwmMQ\"]},\"src/account/KinoAccountMinterUpgradable.sol\":{\"keccak256\":\"0xf55e0006b26db318a49acb99ff7ebf869f524a7665e110fefee9a38c950592d1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06e99ad084e9782d801ed7b81d51457989ad17a77e27d79124b801c6f3813776\",\"dweb:/ipfs/QmVYwcYWPFFdZiKYbSAoRPwS6n5AjLUXENLJEsLeYaFbgY\"]},\"src/account/Reseller.sol\":{\"keccak256\":\"0xbdc79197517f582b6fecf8f9cb7559ff062068d0d6ef064882e719f316d1f044\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c02b3623090994e3681a7dce5655a546b4c127608e8a80be8d517d06df13fa94\",\"dweb:/ipfs/QmVW7TjfprQbGHNM13GtGV5hT7PsNvJ3P4RZzZztp5EvWt\"]},\"src/account/mech/Account.sol\":{\"keccak256\":\"0x54c3ee606859f53e1f4ad616edecad122a3ba3c15e6be5f5addad831bed9c522\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://999bd2691e9be9f6a34c7a4e4fd9a1a019c2308d6e32d2ff882172d72e24ee8b\",\"dweb:/ipfs/QmRPSbTqLgywzXCSnkE2dKHPGUa5BDU2s76EKDcAL7qDuW\"]},\"src/account/mech/ERC721TokenBoundMech.sol\":{\"keccak256\":\"0x2029ca8a55d1e5f9e7181599de7bfc8eb445a521b57897cc2f3312539c265316\",\"license\":\"LGPL-3.0\",\"urls\":[\"bzz-raw://707035c63fd6ecc99829ff5d2db958411ca027c4db3e26a00efe80d725ac3ed7\",\"dweb:/ipfs/QmTWZM5HMjgfpjXuGaswCCt4BJ8wSvsHQPs24QPHdCH9CZ\"]},\"src/account/mech/Mech.sol\":{\"keccak256\":\"0x8c1a145a0ea44a320dec66c8d166c671099fa0afe9ff796f100941740dea0465\",\"license\":\"LGPL-3.0\",\"urls\":[\"bzz-raw://67071592a0f6dfd0946d7110ebd44990a42928e421077967ecac7585246b2eb1\",\"dweb:/ipfs/QmVw8XtP6iVty9FhhiNc4GvJqwSprVoLheL7MFhy5JBEpP\"]},\"src/account/mech/Receiver.sol\":{\"keccak256\":\"0xff0336d865b81dafcf9d0421fd0fbfabcff37d6eb1fc677e776e0bff70ce5d2f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://b5420adf6fa64304498761fd6e39dad835f74335e3d8dbb8337a49552f4abd36\",\"dweb:/ipfs/QmcDWdR4DRGCXNRdjwNbkp4mumiKHjj9MFMKWU3mLGTnLW\"]},\"src/account/mech/TokenBoundMech.sol\":{\"keccak256\":\"0x1cf35863555031a6a4b537a91e0f79c97147bbea797fa6a103e080e307d9cc6b\",\"license\":\"LGPL-3.0\",\"urls\":[\"bzz-raw://5fe04e8a7415faeae9e847551f84d48eaba958ae488606d14dafd0569aaa69bf\",\"dweb:/ipfs/QmUcw516woRSei6B4Yfejdp9nCSYckBF43h5HVko9M5HcT\"]},\"src/interfaces/IKimap-old.sol\":{\"keccak256\":\"0xfcc20dbbb2a4db2c7d6b38fd1c7d77c9520a6a50c76e146382b6cfc2d35a2979\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bacb4059214da8e9f51bfa045474efe2c4f9e0a74a5067d34a21815bee717b8a\",\"dweb:/ipfs/QmQnrEGHUEGQKoR2GEMFKd83JsfcX3kRQ1uxn4duMHF5Cn\"]},\"src/interfaces/IKimap.sol\":{\"keccak256\":\"0xd47e4de08cfb9cb0d91ff8d09a623a60f5c0e4f4bc0e79262410133239f7105d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b1dde13c45191005e3b11e7c68f7d53ef490a2acbb6220a0f712a4c07c6d9cd4\",\"dweb:/ipfs/QmXnBHEdxiKCCYvuW1Hfh1pBGqaaUvpXvLBjx6TnGGZMLp\"]},\"src/interfaces/IKinoAccountMinter.sol\":{\"keccak256\":\"0xeacd0ce8cf649f0a648a25f62dfbe479c1ceae798c4e918637c88f3d65ca127b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://29e3a58161351f878f4ef53555ed7e907f235cde0dcd723c2e85b4b56f023681\",\"dweb:/ipfs/QmdZVBz7pci6johTTe2zsStwshsqLJQvYmHZR8m119RupT\"]},\"src/interfaces/IMech.sol\":{\"keccak256\":\"0x08406e4f7ac9da1e3bfce1739ca126e34e882c3ec5942d985b9b3b84c4e4e3e0\",\"license\":\"LGPL-3.0\",\"urls\":[\"bzz-raw://1f7dd6be48c6c99550c3dd46afadc87927b6eb352eb483d06d4c48e4c7921e83\",\"dweb:/ipfs/QmdVB9Dis4mm2VGM99E1skGwq3Pov7joDZ12WXxdi7K7Go\"]},\"src/utils/BytesUtils.sol\":{\"keccak256\":\"0xf862cd86d749158a554e3cb517efa9097331ec0cf7225117f21e96fb50c67edb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a694ac54694999c9364cadf0303c514d53129302ea9830305c91f948177fcdbc\",\"dweb:/ipfs/QmNYexKr25oC8hsnR4aBWaCrS48nwuYZxs6Qr3tSh6vNgr\"]},\"src/utils/NameEncoder.sol\":{\"keccak256\":\"0x1bbae1edba02ba32d61f1adf9905b3f0e7ed71fef9994ecfffd17621a92fbc38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d3a12446d000d0744d5690dd3694409d8a94f726c8333ec8e2285dac0284d0d\",\"dweb:/ipfs/QmYJDTJjwbsYS78Frmp7WL4X32eeABJ1AAgiBLumaGg8jM\"]}},\"version\":1}",
    "metadata": {
      "compiler": {
        "version": "0.8.28+commit.7893614a"
      },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_kimap",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_kinoAccountImpl",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_resellerImpl",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "target",
                "type": "address"
              }
            ],
            "type": "error",
            "name": "AddressEmptyCode"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "ECDSAInvalidSignature"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "length",
                "type": "uint256"
              }
            ],
            "type": "error",
            "name": "ECDSAInvalidSignatureLength"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "s",
                "type": "bytes32"
              }
            ],
            "type": "error",
            "name": "ECDSAInvalidSignatureS"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "implementation",
                "type": "address"
              }
            ],
            "type": "error",
            "name": "ERC1967InvalidImplementation"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "ERC1967NonPayable"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "FailedCall"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "InvalidInitialization"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "InvalidKimapAddress"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "InvalidKinoAccountImpl"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "InvalidResellerImpl"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "actual",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "expected",
                "type": "address"
              }
            ],
            "type": "error",
            "name": "InvalidSignature"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "NotInitializing"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "NotOperatorOrEntryPoint"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "OwnershipCycle"
          },
          {
            "inputs": [],
            "type": "error",
            "name": "UUPSUnauthorizedCallContext"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "slot",
                "type": "bytes32"
              }
            ],
            "type": "error",
            "name": "UUPSUnsupportedProxiableUUID"
          },
          {
            "inputs": [
              {
                "internalType": "uint64",
                "name": "version",
                "type": "uint64",
                "indexed": false
              }
            ],
            "type": "event",
            "name": "Initialized",
            "anonymous": false
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "implementation",
                "type": "address",
                "indexed": true
              }
            ],
            "type": "event",
            "name": "Upgraded",
            "anonymous": false
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "KIMAP",
            "outputs": [
              {
                "internalType": "contract IKimap",
                "name": "",
                "type": "address"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "KINO_ACCOUNT_IMPL",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "RESSELLER_IMPL",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "UPGRADE_INTERFACE_VERSION",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "entryPoint",
            "outputs": [
              {
                "internalType": "contract IEntryPoint",
                "name": "",
                "type": "address"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              },
              {
                "internalType": "uint8",
                "name": "operation",
                "type": "uint8"
              }
            ],
            "stateMutability": "payable",
            "type": "function",
            "name": "execute",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "returnData",
                "type": "bytes"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              },
              {
                "internalType": "uint8",
                "name": "operation",
                "type": "uint8"
              },
              {
                "internalType": "uint256",
                "name": "txGas",
                "type": "uint256"
              }
            ],
            "stateMutability": "payable",
            "type": "function",
            "name": "execute",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "returnData",
                "type": "bytes"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "name",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "initialization",
                "type": "bytes"
              },
              {
                "internalType": "address",
                "name": "implementation",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "signer",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "getMessage",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "getNonce",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "getResellerList",
            "outputs": [
              {
                "internalType": "string[]",
                "name": "",
                "type": "string[]"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "string[]",
                "name": "resellersToGet",
                "type": "string[]"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "getResellers",
            "outputs": [
              {
                "internalType": "struct ApiRegistry.ResellerData[]",
                "name": "",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "address",
                    "name": "tba",
                    "type": "address"
                  },
                  {
                    "internalType": "string",
                    "name": "node_name",
                    "type": "string"
                  }
                ]
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "initialize"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "signer",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "isOperator",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "hash",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "isValidSignature",
            "outputs": [
              {
                "internalType": "bytes4",
                "name": "magicValue",
                "type": "bytes4"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "signer",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "isValidSigner",
            "outputs": [
              {
                "internalType": "bytes4",
                "name": "magicValue",
                "type": "bytes4"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "kimap",
            "outputs": [
              {
                "internalType": "contract IKimap",
                "name": "",
                "type": "address"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "name",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "initialization",
                "type": "bytes"
              },
              {
                "internalType": "address",
                "name": "implementation",
                "type": "address"
              }
            ],
            "stateMutability": "payable",
            "type": "function",
            "name": "mint",
            "outputs": [
              {
                "internalType": "address",
                "name": "tba",
                "type": "address"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "name",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "initialization",
                "type": "bytes"
              },
              {
                "internalType": "address",
                "name": "implementation",
                "type": "address"
              },
              {
                "internalType": "struct IKinoAccountMinter.Signature",
                "name": "signature",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "uint8",
                    "name": "v",
                    "type": "uint8"
                  },
                  {
                    "internalType": "bytes32",
                    "name": "r",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "bytes32",
                    "name": "s",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "address",
                    "name": "signer",
                    "type": "address"
                  }
                ]
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "mintBySignature",
            "outputs": [
              {
                "internalType": "address",
                "name": "tba",
                "type": "address"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "uint256[]",
                "name": "",
                "type": "uint256[]"
              },
              {
                "internalType": "uint256[]",
                "name": "",
                "type": "uint256[]"
              },
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "onERC1155BatchReceived",
            "outputs": [
              {
                "internalType": "bytes4",
                "name": "",
                "type": "bytes4"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "onERC1155Received",
            "outputs": [
              {
                "internalType": "bytes4",
                "name": "",
                "type": "bytes4"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "receivedTokenId",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "onERC721Received",
            "outputs": [
              {
                "internalType": "bytes4",
                "name": "",
                "type": "bytes4"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "proxiableUUID",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "string",
                "name": "reseller_name",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "full_node_name",
                "type": "string"
              }
            ],
            "stateMutability": "payable",
            "type": "function",
            "name": "registerAsReseller",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "resellerList",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "resellers",
            "outputs": [
              {
                "internalType": "address",
                "name": "tba",
                "type": "address"
              },
              {
                "internalType": "string",
                "name": "node_name",
                "type": "string"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "state",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "bytes4",
                "name": "interfaceId",
                "type": "bytes4"
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "supportsInterface",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "token",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "chainId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "tokenContract",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "pure",
            "type": "function",
            "name": "tokensReceived"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newImplementation",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "stateMutability": "payable",
            "type": "function",
            "name": "upgradeToAndCall"
          },
          {
            "inputs": [
              {
                "internalType": "struct PackedUserOperation",
                "name": "userOp",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "nonce",
                    "type": "uint256"
                  },
                  {
                    "internalType": "bytes",
                    "name": "initCode",
                    "type": "bytes"
                  },
                  {
                    "internalType": "bytes",
                    "name": "callData",
                    "type": "bytes"
                  },
                  {
                    "internalType": "bytes32",
                    "name": "accountGasLimits",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint256",
                    "name": "preVerificationGas",
                    "type": "uint256"
                  },
                  {
                    "internalType": "bytes32",
                    "name": "gasFees",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "bytes",
                    "name": "paymasterAndData",
                    "type": "bytes"
                  },
                  {
                    "internalType": "bytes",
                    "name": "signature",
                    "type": "bytes"
                  }
                ]
              },
              {
                "internalType": "bytes32",
                "name": "userOpHash",
                "type": "bytes32"
              },
              {
                "internalType": "uint256",
                "name": "missingAccountFunds",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function",
            "name": "validateUserOp",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "validationData",
                "type": "uint256"
              }
            ]
          },
          {
            "inputs": [],
            "stateMutability": "payable",
            "type": "receive"
          }
        ],
        "devdoc": {
          "kind": "dev",
          "methods": {
            "execute(address,uint256,bytes,uint8)": {
              "details": "Allows the mech operator to execute arbitrary transactions",
              "params": {
                "data": "Data payload of transaction.",
                "operation": "Operation type of transaction.",
                "to": "Destination address of transaction.",
                "value": "Ether value of transaction."
              },
              "returns": {
                "returnData": "Return data of the call"
              }
            },
            "execute(address,uint256,bytes,uint8,uint256)": {
              "details": "Allows the mech operator to execute arbitrary transactions",
              "params": {
                "data": "Data payload of transaction.",
                "operation": "Operation type of transaction.",
                "to": "Destination address of transaction.",
                "txGas": "Gas to send for executing the meta transaction, if 0 all left will be sent",
                "value": "Ether value of transaction."
              },
              "returns": {
                "returnData": "Return data of the call"
              }
            },
            "isOperator(address)": {
              "details": "Return if the passed address is authorized to sign on behalf of the mech, must be implemented by the child contract",
              "params": {
                "signer": "The address to check"
              }
            },
            "isValidSignature(bytes32,bytes)": {
              "details": "Checks whether the signature provided is valid for the provided hash, complies with EIP-1271. A signature is valid if either:  - It's a valid ECDSA signature by the mech operator  - It's a valid EIP-1271 signature by the mech operator  - It's a valid EIP-1271 signature by the mech itself",
              "params": {
                "hash": "Hash of the data (could be either a message hash or transaction hash)",
                "signature": "Signature to validate. Can be an ECDSA signature or a EIP-1271 contract signature (identified by v=0)"
              }
            },
            "isValidSigner(address,bytes)": {
              "details": "Returns a magic value indicating whether a given signer is authorized to act on behalf of the account",
              "params": {
                "signer": "The address to check signing authorization for"
              },
              "returns": {
                "magicValue": "Magic value indicating whether the signer is valid"
              }
            },
            "proxiableUUID()": {
              "details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
            },
            "state()": {
              "details": "Returns the current account nonce"
            },
            "supportsInterface(bytes4)": {
              "details": "Returns true if a given interfaceId is supported by this account. This method can be extended by an override"
            },
            "token()": {
              "details": "Returns the identifier of the non-fungible token which owns the account. The return value of this function MUST be constant - it MUST NOT change over time.",
              "returns": {
                "chainId": "      The EIP-155 ID of the chain the token exists on",
                "tokenContract": "The contract address of the token",
                "tokenId": "      The ID of the token"
              }
            },
            "upgradeToAndCall(address,bytes)": {
              "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
              "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
            },
            "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
              "details": "Must validate caller is the entryPoint.      Must validate the signature and nonce",
              "params": {
                "missingAccountFunds": "- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.",
                "userOp": "- The operation that is about to be executed.",
                "userOpHash": "- Hash of the user's request data. can be used as the basis for signature."
              },
              "returns": {
                "validationData": "      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \"authorizer\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \"indefinite\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly."
              }
            }
          },
          "version": 1
        },
        "userdoc": {
          "kind": "user",
          "methods": {
            "entryPoint()": {
              "notice": "Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account."
            },
            "getNonce()": {
              "notice": "Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"
            },
            "validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)": {
              "notice": "Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \"simulation call\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure."
            }
          },
          "version": 1
        }
      },
      "settings": {
        "remappings": [
          "@openzeppelin-contracts-5.1.0/=dependencies/@openzeppelin-contracts-5.1.0/",
          "@openzeppelin-contracts-upgradeable-5.1.0/=dependencies/@openzeppelin-contracts-upgradeable-5.1.0/",
          "@openzeppelin/contracts-upgradeable/=dependencies/@openzeppelin-contracts-upgradeable-5.1.0/",
          "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.1.0/",
          "ds-test/=dependencies/erc6551-reference-0.3.1/lib/forge-std/lib/ds-test/src/",
          "erc6551-reference-0.3.1/=dependencies/erc6551-reference-0.3.1/",
          "eth-infinitism-account-abstraction-0.7/=dependencies/eth-infinitism-account-abstraction-0.7/",
          "forge-std-1.9.4/=dependencies/forge-std-1.9.4/",
          "forge-std/=dependencies/forge-std/src/",
          "safe-global-safe-smart-account-1.4.1-3/=dependencies/safe-global-safe-smart-account-1.4.1-3/"
        ],
        "optimizer": {
          "enabled": true,
          "runs": 200
        },
        "metadata": {
          "bytecodeHash": "ipfs"
        },
        "compilationTarget": {
          "src/account/ApiRegistry.sol": "ApiRegistry"
        },
        "evmVersion": "paris",
        "libraries": {}
      },
      "sources": {
        "dependencies/@openzeppelin-contracts-5.1.0/interfaces/IERC1271.sol": {
          "keccak256": "0x4aaaf1c0737dd16e81f0d2b9833c549747a5ede6873bf1444bc72aa572d03e98",
          "urls": [
            "bzz-raw://eada27d7668eebaea16c3b890aa1b38ffc53965292e26c96f7c44834623f4710",
            "dweb:/ipfs/QmVSWuLtxyCqNbLyY89ptxkvsk4CLLKDQYigEne5Qj8k1L"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-5.1.0/interfaces/IERC1967.sol": {
          "keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
          "urls": [
            "bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
            "dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-5.1.0/interfaces/draft-IERC1822.sol": {
          "keccak256": "0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d",
          "urls": [
            "bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196",
            "dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-5.1.0/proxy/ERC1967/ERC1967Utils.sol": {
          "keccak256": "0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06",
          "urls": [
            "bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c",
            "dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-5.1.0/proxy/beacon/IBeacon.sol": {
          "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
          "urls": [
            "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
            "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-5.1.0/token/ERC1155/IERC1155Receiver.sol": {
          "keccak256": "0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715",
          "urls": [
            "bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20",
            "dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-5.1.0/token/ERC721/IERC721.sol": {
          "keccak256": "0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261",
          "urls": [
            "bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11",
            "dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-5.1.0/utils/Address.sol": {
          "keccak256": "0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5",
          "urls": [
            "bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23",
            "dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-5.1.0/utils/Create2.sol": {
          "keccak256": "0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06",
          "urls": [
            "bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e",
            "dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-5.1.0/utils/Errors.sol": {
          "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
          "urls": [
            "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
            "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-5.1.0/utils/Panic.sol": {
          "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
          "urls": [
            "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
            "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-5.1.0/utils/StorageSlot.sol": {
          "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
          "urls": [
            "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
            "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-5.1.0/utils/Strings.sol": {
          "keccak256": "0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed",
          "urls": [
            "bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0",
            "dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-5.1.0/utils/cryptography/ECDSA.sol": {
          "keccak256": "0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84",
          "urls": [
            "bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9",
            "dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-5.1.0/utils/cryptography/MessageHashUtils.sol": {
          "keccak256": "0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575",
          "urls": [
            "bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e",
            "dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-5.1.0/utils/introspection/IERC165.sol": {
          "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
          "urls": [
            "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
            "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-5.1.0/utils/math/Math.sol": {
          "keccak256": "0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea",
          "urls": [
            "bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d",
            "dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-5.1.0/utils/math/SafeCast.sol": {
          "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
          "urls": [
            "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
            "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-5.1.0/utils/math/SignedMath.sol": {
          "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
          "urls": [
            "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
            "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-upgradeable-5.1.0/proxy/utils/Initializable.sol": {
          "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
          "urls": [
            "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
            "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
          ],
          "license": "MIT"
        },
        "dependencies/@openzeppelin-contracts-upgradeable-5.1.0/proxy/utils/UUPSUpgradeable.sol": {
          "keccak256": "0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27",
          "urls": [
            "bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e",
            "dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr"
          ],
          "license": "MIT"
        },
        "dependencies/erc6551-reference-0.3.1/src/interfaces/IERC6551Account.sol": {
          "keccak256": "0xda097894cc052f451ad669c5a07a9eda3f53a948f8080714850dc68cc1040b42",
          "urls": [
            "bzz-raw://8ca48dd1eff4f9eee3699a6800c09c4d208d103862f2a55d66286e8eb4b7771e",
            "dweb:/ipfs/QmX2KX2fmUV5rbVoJSAq6BTVVwxK1Jy169dRJN2h8UCNLz"
          ],
          "license": "MIT"
        },
        "dependencies/erc6551-reference-0.3.1/src/interfaces/IERC6551Executable.sol": {
          "keccak256": "0x9bdb7a7e324bf36203ec6ff68c454446cae3993c1054b0356a081fa52ec43a29",
          "urls": [
            "bzz-raw://a9c6187c6633ec42ccb0ae5fdf4f1791fad7a505f29c8b55b1a5fe3ec9ee0148",
            "dweb:/ipfs/QmeANTvdkBMZeumsw6Qe7MHEjgkHJTLju4oQtAfo9HLzNV"
          ],
          "license": "MIT"
        },
        "dependencies/erc6551-reference-0.3.1/src/lib/ERC6551AccountLib.sol": {
          "keccak256": "0x49e81d01b3aef13b314a6667e4811089a78ad03dfad5cd430b00be2f9ed8ea34",
          "urls": [
            "bzz-raw://46b60a9d293324e56f59937e2a4d3a79ef4f69847868b5bbc3d81bcd6d1981a7",
            "dweb:/ipfs/QmTgv7s9kf8UxdXuR1TswCQLguKueVwbABahPLnfJRUXfB"
          ],
          "license": "MIT"
        },
        "dependencies/erc6551-reference-0.3.1/src/lib/ERC6551BytecodeLib.sol": {
          "keccak256": "0xc6a20fb273cbe33fa8d9591aaeb6a9f24b8fd9944f8d0017f4bf5b26614731f9",
          "urls": [
            "bzz-raw://740fed446bda3effacea6fa48d23a7d23911363e353bd12c5171b2b21b996acf",
            "dweb:/ipfs/QmNbWP8UkANAUGCc4ZcjfyKDBi89KjSunFQEvnhpXLBFt4"
          ],
          "license": "MIT"
        },
        "dependencies/eth-infinitism-account-abstraction-0.7/contracts/core/BaseAccount.sol": {
          "keccak256": "0x2736272f077d1699b8b8bf8be18d1c20e506668fc52b3293da70d17e63794358",
          "urls": [
            "bzz-raw://35744475cf48405d7fd6edf6a96c84ef9da3ce844d8dfe3e2e1ffc30edf21d07",
            "dweb:/ipfs/QmUdau9VjVQ7iuRbdTmFSrXP7Hcasd9Cc57LP9thK78bwj"
          ],
          "license": "GPL-3.0"
        },
        "dependencies/eth-infinitism-account-abstraction-0.7/contracts/core/Helpers.sol": {
          "keccak256": "0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6",
          "urls": [
            "bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e",
            "dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc"
          ],
          "license": "GPL-3.0"
        },
        "dependencies/eth-infinitism-account-abstraction-0.7/contracts/core/UserOperationLib.sol": {
          "keccak256": "0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b",
          "urls": [
            "bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc",
            "dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS"
          ],
          "license": "GPL-3.0"
        },
        "dependencies/eth-infinitism-account-abstraction-0.7/contracts/interfaces/IAccount.sol": {
          "keccak256": "0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78",
          "urls": [
            "bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020",
            "dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP"
          ],
          "license": "GPL-3.0"
        },
        "dependencies/eth-infinitism-account-abstraction-0.7/contracts/interfaces/IAggregator.sol": {
          "keccak256": "0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588",
          "urls": [
            "bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155",
            "dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5"
          ],
          "license": "GPL-3.0"
        },
        "dependencies/eth-infinitism-account-abstraction-0.7/contracts/interfaces/IEntryPoint.sol": {
          "keccak256": "0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4",
          "urls": [
            "bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9",
            "dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe"
          ],
          "license": "GPL-3.0"
        },
        "dependencies/eth-infinitism-account-abstraction-0.7/contracts/interfaces/INonceManager.sol": {
          "keccak256": "0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb",
          "urls": [
            "bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3",
            "dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk"
          ],
          "license": "GPL-3.0"
        },
        "dependencies/eth-infinitism-account-abstraction-0.7/contracts/interfaces/IStakeManager.sol": {
          "keccak256": "0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04",
          "urls": [
            "bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00",
            "dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj"
          ],
          "license": "GPL-3.0-only"
        },
        "dependencies/eth-infinitism-account-abstraction-0.7/contracts/interfaces/PackedUserOperation.sol": {
          "keccak256": "0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359",
          "urls": [
            "bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be",
            "dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"
          ],
          "license": "GPL-3.0"
        },
        "dependencies/safe-global-safe-smart-account-1.4.1-3/contracts/interfaces/ERC1155TokenReceiver.sol": {
          "keccak256": "0x87e62665c041cade64e753ecdccf931cb100ab6e4bcc98769c1e6474be9db493",
          "urls": [
            "bzz-raw://59ca1157dcfe19c72b9d1244a6ae5ec70fee9793d4d8af523b70f22ae567d55c",
            "dweb:/ipfs/QmfE3kv73QuQWAWQND927LWVHVLCp19m1mLUvxVYJDEFZM"
          ],
          "license": "LGPL-3.0-only"
        },
        "dependencies/safe-global-safe-smart-account-1.4.1-3/contracts/interfaces/ERC721TokenReceiver.sol": {
          "keccak256": "0x96c4c5457fede2d4c6012011dfda36f8e8ffdb7388468f2dddb35661538bf479",
          "urls": [
            "bzz-raw://99a54737bc23722f79ec9cf9de63ba35b556a61df453eb332f3cac783503f26c",
            "dweb:/ipfs/QmbLW5C2RhoLbwDWEPtTKpyYE5apT9B3q4U11PZG3wSM1n"
          ],
          "license": "LGPL-3.0-only"
        },
        "dependencies/safe-global-safe-smart-account-1.4.1-3/contracts/interfaces/ERC777TokensRecipient.sol": {
          "keccak256": "0x32ca7f1610659f35e52f5a989e1d844b7847ad57fab06e0cae5bc027248536ac",
          "urls": [
            "bzz-raw://9082896ec697e320087b1a682b69a5cdf71b33a2f7a956e2fb6054f9f9d56d06",
            "dweb:/ipfs/QmUu7iNkQNvvqBPbbxuhqiQpYPYYnfsyPEsf4AMQFANXFZ"
          ],
          "license": "LGPL-3.0-only"
        },
        "src/account/ApiRegistry.sol": {
          "keccak256": "0xc9457a36fe768ae1bea47269c29156834e10c5d5b5c1465f53b9977e1ba95662",
          "urls": [
            "bzz-raw://42279ef1e3874147f4f70c5aa6f8f9c848e0a9aff2c907bb579f236b8f110335",
            "dweb:/ipfs/QmNkE7HZBww6kwiJtYdXV1LkYSkUour8WAbxCWrCG3zUvE"
          ],
          "license": "Apache-2.0"
        },
        "src/account/KinoAccountMinter.sol": {
          "keccak256": "0x58871151f767d2ec45a9d8af34531def0920290dc219274ca56c275d787a819d",
          "urls": [
            "bzz-raw://8d841b89c32238b1d0810f846c2746abe3577578f6e07869042df5a717f2022a",
            "dweb:/ipfs/QmatbPAvLf298xmHA5kCTQmdYP8up4ZazhwdPSQ1jTwmMQ"
          ],
          "license": "Apache-2.0"
        },
        "src/account/KinoAccountMinterUpgradable.sol": {
          "keccak256": "0xf55e0006b26db318a49acb99ff7ebf869f524a7665e110fefee9a38c950592d1",
          "urls": [
            "bzz-raw://06e99ad084e9782d801ed7b81d51457989ad17a77e27d79124b801c6f3813776",
            "dweb:/ipfs/QmVYwcYWPFFdZiKYbSAoRPwS6n5AjLUXENLJEsLeYaFbgY"
          ],
          "license": "Apache-2.0"
        },
        "src/account/Reseller.sol": {
          "keccak256": "0xbdc79197517f582b6fecf8f9cb7559ff062068d0d6ef064882e719f316d1f044",
          "urls": [
            "bzz-raw://c02b3623090994e3681a7dce5655a546b4c127608e8a80be8d517d06df13fa94",
            "dweb:/ipfs/QmVW7TjfprQbGHNM13GtGV5hT7PsNvJ3P4RZzZztp5EvWt"
          ],
          "license": "Apache-2.0"
        },
        "src/account/mech/Account.sol": {
          "keccak256": "0x54c3ee606859f53e1f4ad616edecad122a3ba3c15e6be5f5addad831bed9c522",
          "urls": [
            "bzz-raw://999bd2691e9be9f6a34c7a4e4fd9a1a019c2308d6e32d2ff882172d72e24ee8b",
            "dweb:/ipfs/QmRPSbTqLgywzXCSnkE2dKHPGUa5BDU2s76EKDcAL7qDuW"
          ],
          "license": "GPL-3.0"
        },
        "src/account/mech/ERC721TokenBoundMech.sol": {
          "keccak256": "0x2029ca8a55d1e5f9e7181599de7bfc8eb445a521b57897cc2f3312539c265316",
          "urls": [
            "bzz-raw://707035c63fd6ecc99829ff5d2db958411ca027c4db3e26a00efe80d725ac3ed7",
            "dweb:/ipfs/QmTWZM5HMjgfpjXuGaswCCt4BJ8wSvsHQPs24QPHdCH9CZ"
          ],
          "license": "LGPL-3.0"
        },
        "src/account/mech/Mech.sol": {
          "keccak256": "0x8c1a145a0ea44a320dec66c8d166c671099fa0afe9ff796f100941740dea0465",
          "urls": [
            "bzz-raw://67071592a0f6dfd0946d7110ebd44990a42928e421077967ecac7585246b2eb1",
            "dweb:/ipfs/QmVw8XtP6iVty9FhhiNc4GvJqwSprVoLheL7MFhy5JBEpP"
          ],
          "license": "LGPL-3.0"
        },
        "src/account/mech/Receiver.sol": {
          "keccak256": "0xff0336d865b81dafcf9d0421fd0fbfabcff37d6eb1fc677e776e0bff70ce5d2f",
          "urls": [
            "bzz-raw://b5420adf6fa64304498761fd6e39dad835f74335e3d8dbb8337a49552f4abd36",
            "dweb:/ipfs/QmcDWdR4DRGCXNRdjwNbkp4mumiKHjj9MFMKWU3mLGTnLW"
          ],
          "license": "LGPL-3.0-only"
        },
        "src/account/mech/TokenBoundMech.sol": {
          "keccak256": "0x1cf35863555031a6a4b537a91e0f79c97147bbea797fa6a103e080e307d9cc6b",
          "urls": [
            "bzz-raw://5fe04e8a7415faeae9e847551f84d48eaba958ae488606d14dafd0569aaa69bf",
            "dweb:/ipfs/QmUcw516woRSei6B4Yfejdp9nCSYckBF43h5HVko9M5HcT"
          ],
          "license": "LGPL-3.0"
        },
        "src/interfaces/IKimap-old.sol": {
          "keccak256": "0xfcc20dbbb2a4db2c7d6b38fd1c7d77c9520a6a50c76e146382b6cfc2d35a2979",
          "urls": [
            "bzz-raw://bacb4059214da8e9f51bfa045474efe2c4f9e0a74a5067d34a21815bee717b8a",
            "dweb:/ipfs/QmQnrEGHUEGQKoR2GEMFKd83JsfcX3kRQ1uxn4duMHF5Cn"
          ],
          "license": "Apache-2.0"
        },
        "src/interfaces/IKimap.sol": {
          "keccak256": "0xd47e4de08cfb9cb0d91ff8d09a623a60f5c0e4f4bc0e79262410133239f7105d",
          "urls": [
            "bzz-raw://b1dde13c45191005e3b11e7c68f7d53ef490a2acbb6220a0f712a4c07c6d9cd4",
            "dweb:/ipfs/QmXnBHEdxiKCCYvuW1Hfh1pBGqaaUvpXvLBjx6TnGGZMLp"
          ],
          "license": "Apache-2.0"
        },
        "src/interfaces/IKinoAccountMinter.sol": {
          "keccak256": "0xeacd0ce8cf649f0a648a25f62dfbe479c1ceae798c4e918637c88f3d65ca127b",
          "urls": [
            "bzz-raw://29e3a58161351f878f4ef53555ed7e907f235cde0dcd723c2e85b4b56f023681",
            "dweb:/ipfs/QmdZVBz7pci6johTTe2zsStwshsqLJQvYmHZR8m119RupT"
          ],
          "license": "Apache-2.0"
        },
        "src/interfaces/IMech.sol": {
          "keccak256": "0x08406e4f7ac9da1e3bfce1739ca126e34e882c3ec5942d985b9b3b84c4e4e3e0",
          "urls": [
            "bzz-raw://1f7dd6be48c6c99550c3dd46afadc87927b6eb352eb483d06d4c48e4c7921e83",
            "dweb:/ipfs/QmdVB9Dis4mm2VGM99E1skGwq3Pov7joDZ12WXxdi7K7Go"
          ],
          "license": "LGPL-3.0"
        },
        "src/utils/BytesUtils.sol": {
          "keccak256": "0xf862cd86d749158a554e3cb517efa9097331ec0cf7225117f21e96fb50c67edb",
          "urls": [
            "bzz-raw://a694ac54694999c9364cadf0303c514d53129302ea9830305c91f948177fcdbc",
            "dweb:/ipfs/QmNYexKr25oC8hsnR4aBWaCrS48nwuYZxs6Qr3tSh6vNgr"
          ],
          "license": "MIT"
        },
        "src/utils/NameEncoder.sol": {
          "keccak256": "0x1bbae1edba02ba32d61f1adf9905b3f0e7ed71fef9994ecfffd17621a92fbc38",
          "urls": [
            "bzz-raw://1d3a12446d000d0744d5690dd3694409d8a94f726c8333ec8e2285dac0284d0d",
            "dweb:/ipfs/QmYJDTJjwbsYS78Frmp7WL4X32eeABJ1AAgiBLumaGg8jM"
          ],
          "license": "MIT"
        }
      },
      "version": 1
    },
    "id": 77
  }
  